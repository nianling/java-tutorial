(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{659:function(t,a,n){"use strict";n.r(a);var s=n(21),e=Object(s.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"移动文件或目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#移动文件或目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 移动文件或目录")]),t._v(" "),n("p",[t._v("您可以使用该\n"),n("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-",target:"_blank",rel:"noopener noreferrer"}},[t._v("move(Path, Path, CopyOption...)"),n("OutboundLink")],1),t._v("\n方法移动文件或目录 。如果目标文件存在，则该移动将失败，除非指定了该 "),n("code",[t._v("REPLACE_EXISTING")]),t._v(" 选项。")]),t._v(" "),n("p",[t._v("空目录可以移动。如果目录不为空，则可以移动目录，而不移动该目录的内容。在 UNIX 系统上，移动同一分区中的目录通常包括重命名目录。\n在这种情况下，即使目录包含文件，此方法仍然可行。")]),t._v(" "),n("p",[t._v("此方法采用 "),n("code",[t._v("varargs")]),t._v(" 参数 - 支持以下 "),n("code",[t._v("StandardCopyOption")]),t._v(" 枚举：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("REPLACE_EXISTING")]),t._v(" - 即使目标文件已经存在，也执行移动。如果目标是符号链接，则替换符号链接，但指向的内容不受影响。")]),t._v(" "),n("li",[n("strong",[t._v("ATOMIC_MOVE")]),t._v(" - 作为原子文件操作执行移动。如果文件系统不支持原子移动，则抛出异常。使用 ATOMIC_MOVE 您可以将文件移动到目录中，并确保观看目录的任何进程访问完整的文件。")])]),t._v(" "),n("p",[t._v("以下说明如何使用 move 方法：")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StandardCopyOption"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nFiles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" REPLACE_EXISTING"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("该方法最常用于文件树递归机制")])])},[],!1,null,null,null);a.default=e.exports}}]);