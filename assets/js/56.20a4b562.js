(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{456:function(t,a,s){"use strict";s.r(a);var n=s(21),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"sortedmap接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sortedmap接口","aria-hidden":"true"}},[t._v("#")]),t._v(" SortedMap接口")]),t._v(" "),s("p",[t._v("SortedMap 是按升序维护其条目，按照键的自然排序或根据创建 Comparator 时提供的顺序排序。\n自然顺序和 Comparators 在“ "),s("RouterLink",{attrs:{to:"/collections/interfaces/objectOrdering.html"}},[t._v("对象顺序")]),t._v("” 一节中讨论 。\n该 SortedMap 接口提供正常 Map 操作和以下操作：")],1),t._v(" "),s("ul",[s("li",[t._v("Range view — 对排序后的map执行任意范围操作")]),t._v(" "),s("li",[t._v("Endpoints — 返回mao中的第一个或则最后一个键")]),t._v(" "),s("li",[t._v("Comparator access — 返回 Comparator，如果有的话。")])]),t._v(" "),s("p",[t._v("以下接口是模拟的 SortedSet。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SortedMap")]),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("K"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" V"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("K"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" V"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Comparator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" K"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("comparator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    SortedMap"),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("K"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" V"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("K fromKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" K toKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    SortedMap"),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("K"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" V"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("headMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("K toKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    SortedMap"),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("K"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" V"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tailMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("K fromKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    K "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("firstKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    K "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h2",{attrs:{id:"map-操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-操作","aria-hidden":"true"}},[t._v("#")]),t._v(" map 操作")]),t._v(" "),s("p",[t._v("SortedMap 继承自 map，其他的都有相同的行为，但是有以下两个例外：")]),t._v(" "),s("ul",[s("li",[t._v("由 Iterator 返回 iterator 任何的有序映射的操作 Collection，以便遍历集合。")]),t._v(" "),s("li",[t._v("toArray 操作返回的数组按顺序包含键，值或条目。")])]),t._v(" "),s("h2",{attrs:{id:"标准构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准构造函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 标准构造函数")]),t._v(" "),s("p",[t._v("按照惯例，所有的通用 Map 实施方式提供了一个标准转换构造函数。SortedMap 实现也不例外。\n在 TreeMap 这个构造函数中创建一个实例，根据它们的键的自然顺序来对它的条目进行排序。\n这可能是一个错误。最好是动态检查指定的 Map 实例是否为 SortedMap，如果是，\n则根据相同的标准（比较器或自然排序）对新映射进行排序。因为 TreeMap 采取了它所做的方法，它还提供了一个构造函数")]),t._v(" "),s("p",[t._v("SortedMap 按照惯例，实现还提供了一个构造函数，该构造函数接受 Comparator 并返回根据指定排序的空映射 Comparator。\n如果 null 传递给这个构造函数，它将返回一个 Map 根据它们的键的自然排序来排序它的映射。")]),t._v(" "),s("h2",{attrs:{id:"与-sortedset-比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与-sortedset-比较","aria-hidden":"true"}},[t._v("#")]),t._v(" 与 SortedSet 比较")]),t._v(" "),s("p",[t._v("由于这个接口是一个精确的 Map 类比 SortedSet，所以 SortedSet 接口部分中的所有语句和代码示例 SortedMap 仅适用于微小的修改？？？？")])])},[],!1,null,null,null);a.default=e.exports}}]);